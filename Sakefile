use 'sake-bundle'
use 'sake-outdated'
use 'sake-publish'
use 'sake-version'

option '-b', '--browser [browser]', 'browser to use for tests'
option '-g', '--grep [filter]',     'test filter'
option '-t', '--test [test]',       'specify test to run'
option '-v', '--verbose',           'enable verbose test logging'

task 'clean', 'clean project', ->
  exec 'rm -rf lib'
  
task 'build', 'build project', ['build:js', 'build:static']

task 'build:js', 'build js', ->
  console.log('build:js')

  return if (running 'build')
  
  bundle.write
    entry:  'src/js/app.coffee'
    dest:   'public/js/flatworld.js'
    compilers:
      coffee:
        version: 1
    format: 'web'
    details: true
    commonjs: true
  .catch (err) ->
    console.error err

task 'build:min', 'build js for production', ['build:static', 'build:js'], ->
  yield exec 'uglifyjs public/js/flatworld.js -o public/js/flatworld.min.js'
  yield exec 'cleancss public/css/app.css -o public/css/app.min.css'
  
task 'build:static', 'build static assets', ->
  exec '''
    mkdir -p public/css
    mkdir -p public/js
    bebop compile'
  '''

task 'build:test', 'build project', ->
  yield bundle.write
    entry:  'src/js/cjs.coffee'
    dest:   'test/lib/types.js'
    format: 'cjs'
  
task 'test', 'Run tests', ['build:test'], (opts) ->
  bail     = opts.bail     ? true
  grep     = opts.grep     ? ''
  test     = opts.test     ? 'test test/types'
  verbose  = opts.verbose  ? ''

  bail    = '--bail' if bail
  grep    = "--grep #{opts.grep}" if grep
  verbose = 'DEBUG=nightmare VERBOSE=true' if verbose

  bin = 'mocha'

  {status} = yield exec.interactive "NODE_ENV=test #{verbose}
    #{bin}
    --colors
    --reporter spec
    --timeout 10000000
    --compilers coffee:coffee-script/register
    --require co-mocha
    --require postmortem/register
    #{bail}
    #{grep}
    #{test}"
        
  process.exit status

task 'watch', 'watch for changes and rebuild project', ['watch:js', 'watch:static']

task 'watch:js', 'watch js for changes and rebuild', ->
  build = (filename) ->
    console.log('watch:js')
    return if (running 'build')
    console.log filename, 'modified'
    invoke 'build:js'

  watch 'src/',          build
  watch 'node_modules/', build

task 'watch:static', 'watch static files and rebuild', ['build:static'], ->
  exec 'bebop'


